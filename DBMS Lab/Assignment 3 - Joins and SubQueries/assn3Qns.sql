    -- ASSIGNMENT 3

-- DESC ITEM_LIST;
-- DESC RECEIPTS;
-- DESC PRODUCTS;
-- DESC CUSTOMERS;

-- WRITE THE FOLLOWING USING SUB-QUERY:
-- 1. DISPLAY THE FOOD DETAILS THAT IS NOT PURCHASED BY ANY OF CUSTOMERS.

SELECT * FROM PRODUCTS
WHERE PID NOT IN(SELECT ITEM FROM ITEM_LIST);

-- 2. SHOW THE CUSTOMER DETAILS WHO HAD PLACED MORE THAN 2 ORDERS ON THE SAME DATE.

SELECT * FROM CUSTOMERS
WHERE CID IN(SELECT CID FROM RECEIPTS
GROUP BY CID,RDATE
HAVING COUNT(*)>2);

-- 3. DISPLAY THE PRODUCTS DETAILS THAT HAS BEEN ORDERED MAXIMUM BY THE CUSTOMERS. (USE
-- ALL)

SELECT * FROM PRODUCTS
WHERE PID IN (SELECT ITEM FROM ITEM_LIST GROUP BY ITEM
HAVING COUNT(*) >=ALL (SELECT COUNT(*) FROM ITEM_LIST GROUP BY ITEM));


-- 4. SHOW THE NUMBER OF RECEIPTS THAT CONTAIN THE PRODUCT WHOSE PRICE IS MORE THAN THE
-- AVERAGE PRICE OF ITS FOOD TYPE.

SELECT COUNT(DISTINCT RNO) AS RECEIPT_COUNT FROM ITEM_LIST
WHERE ITEM IN (SELECT PID  FROM PRODUCTS OUTER
WHERE PRICE > (SELECT AVG(PRICE) FROM PRODUCTS WHERE FOOD=OUTER.FOOD));

select count(rno) as cnt from item_list
where item in(select pid from products OUTER
where price>(select avg(price) from products where food=outer.food));

-- WRITE THE FOLLOWING USING JOIN: (USE SUB-QUERY IF REQUIRED)
-- 5. DISPLAY THE CUSTOMER DETAILS ALONG WITH RECEIPT NUMBER AND DATE FOR THE RECEIPTS THAT
-- ARE DATED ON THE LAST DAY OF THE RECEIPT MONTH.

SELECT DISTINCT CID,FNAME,LNAME,RNO,RDATE 
FROM CUSTOMERS C NATURAL JOIN RECEIPTS R
WHERE R.RDATE=LAST_DAY(R.RDATE);

-- 6. DISPLAY THE RECEIPT NUMBER(S) AND ITS TOTAL PRICE FOR THE RECEIPT(S) THAT CONTAIN TWIST
-- AS ONE AMONG FIVE ITEMS. INCLUDE ONLY THE RECEIPTS WITH TOTAL PRICE MORE THAN $25.

SELECT RNO, SUM(PRICE) AS TOTALPRICE FROM ITEM_LIST I JOIN PRODUCTS P ON (I.ITEM = P.PID)
WHERE RNO IN (SELECT RNO FROM ITEM_LIST I JOIN PRODUCTS P ON (I.ITEM = P.PID) WHERE FOOD='Twist') 
GROUP BY RNO 
HAVING SUM(PRICE) >25;

-- 7. DISPLAY THE DETAILS (CUSTOMER DETAILS, RECEIPT NUMBER, ITEM) FOR THE PRODUCT THAT WAS PURCHASED BY THE LEAST NUMBER OF CUSTOMERS.

SELECT DISTINCT CUSTOMERS.CID,FNAME,LNAME,RECEIPTS.RNO,ITEM 
FROM CUSTOMERS,RECEIPTS,ITEM_LIST 
WHERE CUSTOMERS.CID=RECEIPTS.CID AND RECEIPTS.RNO=ITEM_LIST.RNO AND ITEM IN
(SELECT ITEM FROM ITEM_LIST GROUP BY ITEM HAVING COUNT(*)=(SELECT MIN(COUNT(*)) FROM ITEM_LIST GROUP BY ITEM));

-- 8. DISPLAY THE CUSTOMER DETAILS ALONG WITH THE RECEIPT NUMBER WHO ORDERED ALL THE FLAVORS OF MERINGUE IN THE SAME RECEIPT.

SELECT DISTINCT CID, FNAME,LNAME,RNO FROM CUSTOMERS NATURAL JOIN RECEIPTS
WHERE RNO IN (SELECT RNO FROM (SELECT DISTINCT RNO, FLAVOR FROM PRODUCTS JOIN ITEM_LIST ON(ITEM=PID)
WHERE FOOD='Meringue' GROUP BY RNO,FLAVOR) GROUP BY RNO HAVING COUNT(*)>1);

-- WRITE THE FOLLOWING USING SET OPERATIONS:
-- 9. DISPLAY THE PRODUCT DETAILS OF BOTH PIE AND BEAR CLAW.


SELECT * FROM PRODUCTS WHERE FOOD = 'Pie'
UNION
SELECT * FROM PRODUCTS WHERE FOOD = 'Bear Claw';

-- 10.DISPLAY THE CUSTOMERS DETAILS WHO HAVEN'T PLACED ANY ORDERS.

SELECT * FROM CUSTOMERS
MINUS (SELECT CID, FNAME, LNAME
FROM CUSTOMERS NATURAL JOIN RECEIPTS);

-- 11.DISPLAY THE FOOD THAT HAS THE SAME FLAVOR AS THAT OF THE COMMON FLAVOR BETWEEN THE
-- MERINGUE AND TART.

SELECT FOOD FROM PRODUCTS
WHERE FLAVOR IN (SELECT FLAVOR FROM PRODUCTS
WHERE FOOD = 'Meringue'
INTERSECT
SELECT FLAVOR FROM PRODUCTS
WHERE FOOD = 'Tart');



-- 8. DISPLAY THE CUSTOMER DETAILS ALONG WITH THE RECEIPT NUMBER WHO ORDERED ALL THE FLAVORS OF MERINGUE IN THE SAME RECEIPT.

SELECT DISTINCT CID, FNAME,LNAME,RNO FROM CUSTOMERS NATURAL JOIN RECEIPTS
WHERE RNO IN (WITH R AS (SELECT DISTINCT RNO, FLAVOR FROM PRODUCTS JOIN ITEM_LIST ON(ITEM=PID)
WHERE FOOD='Meringue' GROUP BY RNO,FLAVOR) SELECT RNO FROM R GROUP BY RNO HAVING COUNT(*)>1);